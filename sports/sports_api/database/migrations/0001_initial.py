# Generated by Django 4.2.19 on 2025-03-04 06:29

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="UnderstatPlayer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("public_id", models.IntegerField(editable=False)),
                ("season", models.IntegerField(default=2025)),
                ("team", models.CharField(max_length=50)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("player_id", models.CharField(max_length=20, unique=True)),
                ("player_name", models.CharField(max_length=255)),
                ("games", models.IntegerField()),
                ("time", models.IntegerField(help_text="Playing time in minutes")),
                ("goals", models.IntegerField()),
                ("xG", models.FloatField(help_text="Expected Goals")),
                ("assists", models.IntegerField()),
                ("xA", models.FloatField(help_text="Expected Assists")),
                ("shots", models.IntegerField()),
                ("key_passes", models.IntegerField()),
                ("yellow_cards", models.IntegerField()),
                ("red_cards", models.IntegerField()),
                ("position", models.CharField(max_length=2)),
                ("team_title", models.CharField(max_length=255)),
                ("npg", models.IntegerField(help_text="Non-Penalty Goals")),
                ("npxG", models.FloatField(help_text="Non-Penalty Expected Goals")),
                ("xGChain", models.FloatField(help_text="Expected Goals Chain")),
                ("xGBuildup", models.FloatField(help_text="Expected Goals Buildup")),
            ],
            options={
                "verbose_name": "UnderstatPlayer",
                "verbose_name_plural": "UnderstatPlayers",
                "ordering": ["-goals", "player_name"],
            },
        ),
        migrations.CreateModel(
            name="UnderstatTeamResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("public_id", models.IntegerField(editable=False)),
                ("season", models.IntegerField(default=2025)),
                ("team", models.CharField(max_length=50)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_result", models.BooleanField()),
                ("side", models.CharField(max_length=1)),
                ("h_id", models.CharField(max_length=10)),
                ("h_title", models.CharField(max_length=50)),
                ("h_short_title", models.CharField(max_length=10)),
                ("a_id", models.CharField(max_length=10)),
                ("a_title", models.CharField(max_length=50)),
                ("a_short_title", models.CharField(max_length=10)),
                ("goals_a", models.IntegerField()),
                ("goals_h", models.IntegerField()),
                ("xG_a", models.IntegerField()),
                ("xG_h", models.IntegerField()),
                ("forecast_w", models.FloatField()),
                ("forecast_d", models.FloatField()),
                ("forecast_l", models.FloatField()),
                ("datetime", models.DateTimeField()),
                ("result", models.CharField(max_length=1)),
            ],
            options={
                "ordering": ["-date_created"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UnderstatTeamSituation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("public_id", models.IntegerField(editable=False)),
                ("season", models.IntegerField(default=2025)),
                ("team", models.CharField(max_length=50)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("source", models.CharField(max_length=20)),
                ("shots", models.IntegerField()),
                ("goals", models.IntegerField()),
                ("xG", models.IntegerField()),
                ("against_shots", models.IntegerField()),
                ("against_goals", models.IntegerField()),
                ("against_xG", models.IntegerField()),
                ("percent_shots_made", models.FloatField()),
                ("percent_against_shots_made", models.FloatField()),
            ],
            options={
                "ordering": ["-date_created"],
                "abstract": False,
            },
        ),
    ]
